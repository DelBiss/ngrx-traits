import { paginationTraitKey } from '../pagination/pagination.model';
import { createFilterTraitEffects } from './filter.trait.effect';
import {
  createFilterInitialState,
  createFilterTraitReducer,
} from './filter.trait.reducer';
import { filterTraitKey } from './filter.model';
import { createFilterTraitSelectors } from './filter.trait.selectors';
import { loadEntitiesTraitKey } from '../load-entities/load-entities.model';
import { createFilterTraitMutators } from './filter.trait.mutators';
import { createTraitFactory } from 'ngrx-traits';
import { createFilterTraitActions } from './filter.trait.actions';
export function addFilter({
  defaultDebounceTime = 400,
  defaultFilter,
  filterFn,
} = {}) {
  return createTraitFactory({
    key: filterTraitKey,
    depends: [paginationTraitKey, loadEntitiesTraitKey],
    config: { defaultDebounceTime, defaultFilter, filterFn },
    actions: ({ actionsGroupKey }) => createFilterTraitActions(actionsGroupKey),
    selectors: () => createFilterTraitSelectors(),
    mutators: () => createFilterTraitMutators(),
    initialState: ({ previousInitialState, allConfigs }) =>
      createFilterInitialState(previousInitialState, allConfigs),
    reducer: ({ initialState, allActions, allMutators }) =>
      createFilterTraitReducer(initialState, allActions, allMutators),
    effects: ({ allActions, allSelectors, allConfigs }) =>
      createFilterTraitEffects(allActions, allSelectors, allConfigs),
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLnRyYWl0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdHJhaXRzL3NyYy9maWx0ZXIvZmlsdGVyLnRyYWl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxrQkFBa0IsR0FDbkIsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRSxPQUFPLEVBQ0wsd0JBQXdCLEVBQ3hCLHdCQUF3QixHQUN6QixNQUFNLHdCQUF3QixDQUFDO0FBQ2hDLE9BQU8sRUFJTCxjQUFjLEdBQ2YsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN0RSxPQUFPLEVBR0wsb0JBQW9CLEdBQ3JCLE1BQU0sc0NBQXNDLENBQUM7QUFDOUMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBT2xFLE1BQU0sVUFBVSxTQUFTLENBQVksRUFDbkMsbUJBQW1CLEdBQUcsR0FBRyxFQUN6QixhQUFhLEVBQ2IsUUFBUSxNQUNtQixFQUFFO0lBQzdCLE9BQU8sa0JBQWtCLENBQUM7UUFDeEIsR0FBRyxFQUFFLGNBQWM7UUFDbkIsT0FBTyxFQUFFLENBQUMsa0JBQWtCLEVBQUUsb0JBQW9CLENBQUM7UUFDbkQsTUFBTSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFHckQ7UUFDRCxPQUFPLEVBQUUsQ0FBQyxFQUFFLGVBQWUsRUFBNkIsRUFBRSxFQUFFLENBQzFELHdCQUF3QixDQUFJLGVBQWUsQ0FBQztRQUM5QyxTQUFTLEVBQUUsR0FBRyxFQUFFLENBQUMsMEJBQTBCLEVBQWE7UUFDeEQsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLHlCQUF5QixFQUFhO1FBQ3RELFlBQVksRUFBRSxDQUFDLEVBQ2Isb0JBQW9CLEVBQ3BCLFVBQVUsR0FDcUIsRUFBRSxFQUFFLENBQ25DLHdCQUF3QixDQUN0QixvQkFBb0IsRUFDcEIsVUFBMEMsQ0FDM0M7UUFDSCxPQUFPLEVBQUUsQ0FBQyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLEVBQUUsRUFBRSxDQUNyRCx3QkFBd0IsQ0FDdEIsWUFBWSxFQUNaLFVBQTZELEVBQzdELFdBQVcsQ0FDWjtRQUNILE9BQU8sRUFBRSxDQUFDLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLENBQ3BELHdCQUF3QixDQUN0QixVQUVtQixFQUNuQixZQUMrQixFQUMvQixVQUFVLENBQ1g7S0FDSixDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUGFnaW5hdGlvbkFjdGlvbnMsXG4gIHBhZ2luYXRpb25UcmFpdEtleSxcbn0gZnJvbSAnLi4vcGFnaW5hdGlvbi9wYWdpbmF0aW9uLm1vZGVsJztcbmltcG9ydCB7IGNyZWF0ZUZpbHRlclRyYWl0RWZmZWN0cyB9IGZyb20gJy4vZmlsdGVyLnRyYWl0LmVmZmVjdCc7XG5pbXBvcnQge1xuICBjcmVhdGVGaWx0ZXJJbml0aWFsU3RhdGUsXG4gIGNyZWF0ZUZpbHRlclRyYWl0UmVkdWNlcixcbn0gZnJvbSAnLi9maWx0ZXIudHJhaXQucmVkdWNlcic7XG5pbXBvcnQge1xuICBGaWx0ZXJDb25maWcsXG4gIEZpbHRlcktleWVkQ29uZmlnLFxuICBGaWx0ZXJTZWxlY3RvcnMsXG4gIGZpbHRlclRyYWl0S2V5LFxufSBmcm9tICcuL2ZpbHRlci5tb2RlbCc7XG5pbXBvcnQgeyBjcmVhdGVGaWx0ZXJUcmFpdFNlbGVjdG9ycyB9IGZyb20gJy4vZmlsdGVyLnRyYWl0LnNlbGVjdG9ycyc7XG5pbXBvcnQge1xuICBMb2FkRW50aXRpZXNBY3Rpb25zLFxuICBMb2FkRW50aXRpZXNTZWxlY3RvcnMsXG4gIGxvYWRFbnRpdGllc1RyYWl0S2V5LFxufSBmcm9tICcuLi9sb2FkLWVudGl0aWVzL2xvYWQtZW50aXRpZXMubW9kZWwnO1xuaW1wb3J0IHsgY3JlYXRlRmlsdGVyVHJhaXRNdXRhdG9ycyB9IGZyb20gJy4vZmlsdGVyLnRyYWl0Lm11dGF0b3JzJztcbmltcG9ydCB7IGNyZWF0ZVRyYWl0RmFjdG9yeSB9IGZyb20gJ25ncngtdHJhaXRzJztcbmltcG9ydCB7IGNyZWF0ZUZpbHRlclRyYWl0QWN0aW9ucyB9IGZyb20gJy4vZmlsdGVyLnRyYWl0LmFjdGlvbnMnO1xuaW1wb3J0IHsgxp9GaWx0ZXJBY3Rpb25zIH0gZnJvbSAnLi9maWx0ZXIubW9kZWwuaW50ZXJuYWwnO1xuaW1wb3J0IHtcbiAgVHJhaXRBY3Rpb25zRmFjdG9yeUNvbmZpZyxcbiAgVHJhaXRJbml0aWFsU3RhdGVGYWN0b3J5Q29uZmlnLFxufSBmcm9tICduZ3J4LXRyYWl0cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRGaWx0ZXI8RW50aXR5LCBGPih7XG4gIGRlZmF1bHREZWJvdW5jZVRpbWUgPSA0MDAsXG4gIGRlZmF1bHRGaWx0ZXIsXG4gIGZpbHRlckZuLFxufTogRmlsdGVyQ29uZmlnPEVudGl0eSwgRj4gPSB7fSkge1xuICByZXR1cm4gY3JlYXRlVHJhaXRGYWN0b3J5KHtcbiAgICBrZXk6IGZpbHRlclRyYWl0S2V5LFxuICAgIGRlcGVuZHM6IFtwYWdpbmF0aW9uVHJhaXRLZXksIGxvYWRFbnRpdGllc1RyYWl0S2V5XSxcbiAgICBjb25maWc6IHsgZGVmYXVsdERlYm91bmNlVGltZSwgZGVmYXVsdEZpbHRlciwgZmlsdGVyRm4gfSBhcyBGaWx0ZXJDb25maWc8XG4gICAgICBFbnRpdHksXG4gICAgICBGXG4gICAgPixcbiAgICBhY3Rpb25zOiAoeyBhY3Rpb25zR3JvdXBLZXkgfTogVHJhaXRBY3Rpb25zRmFjdG9yeUNvbmZpZykgPT5cbiAgICAgIGNyZWF0ZUZpbHRlclRyYWl0QWN0aW9uczxGPihhY3Rpb25zR3JvdXBLZXkpLFxuICAgIHNlbGVjdG9yczogKCkgPT4gY3JlYXRlRmlsdGVyVHJhaXRTZWxlY3RvcnM8RW50aXR5LCBGPigpLFxuICAgIG11dGF0b3JzOiAoKSA9PiBjcmVhdGVGaWx0ZXJUcmFpdE11dGF0b3JzPEVudGl0eSwgRj4oKSxcbiAgICBpbml0aWFsU3RhdGU6ICh7XG4gICAgICBwcmV2aW91c0luaXRpYWxTdGF0ZSxcbiAgICAgIGFsbENvbmZpZ3MsXG4gICAgfTogVHJhaXRJbml0aWFsU3RhdGVGYWN0b3J5Q29uZmlnKSA9PlxuICAgICAgY3JlYXRlRmlsdGVySW5pdGlhbFN0YXRlPEVudGl0eSwgRj4oXG4gICAgICAgIHByZXZpb3VzSW5pdGlhbFN0YXRlLFxuICAgICAgICBhbGxDb25maWdzIGFzIEZpbHRlcktleWVkQ29uZmlnPEVudGl0eSwgRj4sXG4gICAgICApLFxuICAgIHJlZHVjZXI6ICh7IGluaXRpYWxTdGF0ZSwgYWxsQWN0aW9ucywgYWxsTXV0YXRvcnMgfSkgPT5cbiAgICAgIGNyZWF0ZUZpbHRlclRyYWl0UmVkdWNlcihcbiAgICAgICAgaW5pdGlhbFN0YXRlLFxuICAgICAgICBhbGxBY3Rpb25zIGFzIMafRmlsdGVyQWN0aW9uczxGPiAmIExvYWRFbnRpdGllc0FjdGlvbnM8RW50aXR5PixcbiAgICAgICAgYWxsTXV0YXRvcnMsXG4gICAgICApLFxuICAgIGVmZmVjdHM6ICh7IGFsbEFjdGlvbnMsIGFsbFNlbGVjdG9ycywgYWxsQ29uZmlncyB9KSA9PlxuICAgICAgY3JlYXRlRmlsdGVyVHJhaXRFZmZlY3RzKFxuICAgICAgICBhbGxBY3Rpb25zIGFzIMafRmlsdGVyQWN0aW9uczxGPiAmXG4gICAgICAgICAgTG9hZEVudGl0aWVzQWN0aW9uczxFbnRpdHk+ICZcbiAgICAgICAgICBQYWdpbmF0aW9uQWN0aW9ucyxcbiAgICAgICAgYWxsU2VsZWN0b3JzIGFzIEZpbHRlclNlbGVjdG9yczxFbnRpdHksIEY+ICZcbiAgICAgICAgICBMb2FkRW50aXRpZXNTZWxlY3RvcnM8RW50aXR5PixcbiAgICAgICAgYWxsQ29uZmlncyxcbiAgICAgICksXG4gIH0pO1xufVxuIl19
