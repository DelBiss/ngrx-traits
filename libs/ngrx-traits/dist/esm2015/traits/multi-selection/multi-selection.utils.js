import { __rest } from 'tslib';
export function multiDeselect(id, state) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const _a = state.selectedIds,
    _b = id,
    _value = _a[_b],
    selectedIds = __rest(_a, [typeof _b === 'symbol' ? _b : _b + '']);
  return Object.assign(Object.assign({}, state), { selectedIds: selectedIds });
}
export function multiSelect(id, state) {
  return Object.assign(Object.assign({}, state), {
    selectedIds: Object.assign(Object.assign({}, state.selectedIds), {
      [id]: true,
    }),
  });
}
export function multiToggleSelect(id, state) {
  const selected = state.selectedIds[id];
  if (selected) {
    return multiDeselect(id, state);
  } else {
    return multiSelect(id, state);
  }
}
export function multiClearSelection(state) {
  return Object.assign(Object.assign({}, state), { selectedIds: {} });
}
export function selectTotalSelected(state) {
  return Object.keys(state.selectedIds).length;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0aW9uLnV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdHJhaXRzL3NyYy9tdWx0aS1zZWxlY3Rpb24vbXVsdGktc2VsZWN0aW9uLnV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFLQSxNQUFNLFVBQVUsYUFBYSxDQUMzQixFQUFtQixFQUNuQixLQUFRO0lBRVIsNkRBQTZEO0lBQzdELE1BQXlDLEtBQUEsS0FBSyxDQUFDLFdBQVcsRUFBbEQsS0FBQyxFQUFHLEVBQUUsTUFBTSxTQUFBLEVBQUssV0FBVyxjQUE5Qix1Q0FBZ0MsQ0FBb0IsQ0FBQztJQUMzRCx1Q0FDSyxLQUFLLEtBQ1IsV0FBVyxFQUFFLFdBQVcsSUFDeEI7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FDekIsRUFBbUIsRUFDbkIsS0FBUTtJQUVSLHVDQUNLLEtBQUssS0FDUixXQUFXLGtDQUFPLEtBQUssQ0FBQyxXQUFXLEtBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLE9BQy9DO0FBQ0osQ0FBQztBQUVELE1BQU0sVUFBVSxpQkFBaUIsQ0FDL0IsRUFBbUIsRUFDbkIsS0FBUTtJQUVSLE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkMsSUFBSSxRQUFRLEVBQUU7UUFDWixPQUFPLGFBQWEsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDakM7U0FBTTtRQUNMLE9BQU8sV0FBVyxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQjtBQUNILENBQUM7QUFDRCxNQUFNLFVBQVUsbUJBQW1CLENBQ2pDLEtBQVE7SUFFUix1Q0FBWSxLQUFLLEtBQUUsV0FBVyxFQUFFLEVBQUUsSUFBRztBQUN2QyxDQUFDO0FBRUQsTUFBTSxVQUFVLG1CQUFtQixDQUdqQyxLQUFRO0lBQ1IsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFDL0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEVudGl0eUFuZE11bHRpcGxlU2VsZWN0aW9uU3RhdGUsXG4gIE11bHRpcGxlU2VsZWN0aW9uU3RhdGUsXG59IGZyb20gJy4vbXVsdGktc2VsZWN0aW9uLm1vZGVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIG11bHRpRGVzZWxlY3Q8UyBleHRlbmRzIE11bHRpcGxlU2VsZWN0aW9uU3RhdGU+KFxuICBpZDogbnVtYmVyIHwgc3RyaW5nLFxuICBzdGF0ZTogUyxcbik6IFMge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gIGNvbnN0IHsgW2lkXTogX3ZhbHVlLCAuLi5zZWxlY3RlZElkcyB9ID0gc3RhdGUuc2VsZWN0ZWRJZHM7XG4gIHJldHVybiB7XG4gICAgLi4uc3RhdGUsXG4gICAgc2VsZWN0ZWRJZHM6IHNlbGVjdGVkSWRzLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbXVsdGlTZWxlY3Q8UyBleHRlbmRzIE11bHRpcGxlU2VsZWN0aW9uU3RhdGU+KFxuICBpZDogbnVtYmVyIHwgc3RyaW5nLFxuICBzdGF0ZTogUyxcbik6IFMge1xuICByZXR1cm4ge1xuICAgIC4uLnN0YXRlLFxuICAgIHNlbGVjdGVkSWRzOiB7IC4uLnN0YXRlLnNlbGVjdGVkSWRzLCBbaWRdOiB0cnVlIH0sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtdWx0aVRvZ2dsZVNlbGVjdDxTIGV4dGVuZHMgTXVsdGlwbGVTZWxlY3Rpb25TdGF0ZT4oXG4gIGlkOiBudW1iZXIgfCBzdHJpbmcsXG4gIHN0YXRlOiBTLFxuKTogUyB7XG4gIGNvbnN0IHNlbGVjdGVkID0gc3RhdGUuc2VsZWN0ZWRJZHNbaWRdO1xuICBpZiAoc2VsZWN0ZWQpIHtcbiAgICByZXR1cm4gbXVsdGlEZXNlbGVjdChpZCwgc3RhdGUpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBtdWx0aVNlbGVjdChpZCwgc3RhdGUpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gbXVsdGlDbGVhclNlbGVjdGlvbjxTIGV4dGVuZHMgTXVsdGlwbGVTZWxlY3Rpb25TdGF0ZT4oXG4gIHN0YXRlOiBTLFxuKTogUyB7XG4gIHJldHVybiB7IC4uLnN0YXRlLCBzZWxlY3RlZElkczoge30gfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdFRvdGFsU2VsZWN0ZWQ8XG4gIFQsXG4gIFMgZXh0ZW5kcyBFbnRpdHlBbmRNdWx0aXBsZVNlbGVjdGlvblN0YXRlPFQ+LFxuPihzdGF0ZTogUyk6IG51bWJlciB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhzdGF0ZS5zZWxlY3RlZElkcykubGVuZ3RoO1xufVxuXG5leHBvcnQgdHlwZSBTZWxlY3RlZCA9ICdhbGwnIHwgJ3NvbWUnIHwgJ25vbmUnO1xuIl19
