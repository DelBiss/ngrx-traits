import { createMultiSelectionTraitActions } from './multi-selection.trait.actions';
import { createMultiSelectionTraitSelectors } from './multi-selection.trait.selectors';
import { loadEntitiesTraitKey } from '../load-entities/load-entities.model';
import { createTraitFactory } from 'ngrx-traits';
import {
  createMultiSelectionInitialState,
  createMultiSelectionTraitReducer,
} from './multi-selection.trait.reducer';
import { createMultiSelectionTraitMutators } from './multi-selection.trait.mutators';
export function addMultiSelection() {
  return createTraitFactory({
    key: 'multiSelection',
    depends: [loadEntitiesTraitKey],
    actions: ({ actionsGroupKey }) =>
      createMultiSelectionTraitActions(actionsGroupKey),
    selectors: ({ previousSelectors }) =>
      createMultiSelectionTraitSelectors(previousSelectors),
    initialState: ({ previousInitialState }) =>
      createMultiSelectionInitialState(previousInitialState),
    mutators: ({ allSelectors }) =>
      createMultiSelectionTraitMutators(allSelectors),
    reducer: ({ initialState, allActions, allMutators, allConfigs }) =>
      createMultiSelectionTraitReducer(
        initialState,
        allActions,
        allMutators,
        allConfigs
      ),
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0aW9uLnRyYWl0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdHJhaXRzL3NyYy9tdWx0aS1zZWxlY3Rpb24vbXVsdGktc2VsZWN0aW9uLnRyYWl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRW5GLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBU3ZGLE9BQU8sRUFJTCxvQkFBb0IsR0FDckIsTUFBTSxzQ0FBc0MsQ0FBQztBQUM5QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFakQsT0FBTyxFQUNMLGdDQUFnQyxFQUNoQyxnQ0FBZ0MsR0FDakMsTUFBTSxpQ0FBaUMsQ0FBQztBQUN6QyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQVNyRixNQUFNLFVBQVUsaUJBQWlCO0lBQy9CLE9BQU8sa0JBQWtCLENBQUM7UUFDeEIsR0FBRyxFQUFFLGdCQUFnQjtRQUNyQixPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztRQUMvQixPQUFPLEVBQUUsQ0FBQyxFQUFFLGVBQWUsRUFBNkIsRUFBRSxFQUFFLENBQzFELGdDQUFnQyxDQUFDLGVBQWUsQ0FBQztRQUNuRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLGlCQUFpQixFQUErQixFQUFFLEVBQUUsQ0FDaEUsa0NBQWtDLENBQ2hDLGlCQUFrRCxDQUNuRDtRQUNILFlBQVksRUFBRSxDQUFDLEVBQUUsb0JBQW9CLEVBQWtDLEVBQUUsRUFBRSxDQUN6RSxnQ0FBZ0MsQ0FBUyxvQkFBb0IsQ0FBQztRQUNoRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFlBQVksRUFBbUMsRUFBRSxFQUFFLENBQzlELGlDQUFpQyxDQUMvQixZQUFrRCxDQUNuRDtRQUNILE9BQU8sRUFBRSxDQUFDLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxDQUNqRSxnQ0FBZ0MsQ0FDOUIsWUFBWSxFQUNaLFVBS21CLEVBQ25CLFdBQVcsRUFDWCxVQUV5QixDQUMxQjtLQUNKLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVNdWx0aVNlbGVjdGlvblRyYWl0QWN0aW9ucyB9IGZyb20gJy4vbXVsdGktc2VsZWN0aW9uLnRyYWl0LmFjdGlvbnMnO1xuaW1wb3J0IHsgU29ydEFjdGlvbnMsIFNvcnRLZXllZENvbmZpZyB9IGZyb20gJy4uL3NvcnQnO1xuaW1wb3J0IHsgY3JlYXRlTXVsdGlTZWxlY3Rpb25UcmFpdFNlbGVjdG9ycyB9IGZyb20gJy4vbXVsdGktc2VsZWN0aW9uLnRyYWl0LnNlbGVjdG9ycyc7XG5pbXBvcnQge1xuICBNdWx0aXBsZVNlbGVjdGlvblNlbGVjdG9ycyxcbiAgTXVsdGlTZWxlY3RBY3Rpb25zLFxufSBmcm9tICcuL211bHRpLXNlbGVjdGlvbi5tb2RlbCc7XG5pbXBvcnQge1xuICBQYWdpbmF0aW9uQWN0aW9ucyxcbiAgUGFnaW5hdGlvbktleWVkQ29uZmlnLFxufSBmcm9tICcuLi9wYWdpbmF0aW9uL3BhZ2luYXRpb24ubW9kZWwnO1xuaW1wb3J0IHtcbiAgTG9hZEVudGl0aWVzQWN0aW9ucyxcbiAgTG9hZEVudGl0aWVzS2V5ZWRDb25maWcsXG4gIExvYWRFbnRpdGllc1NlbGVjdG9ycyxcbiAgbG9hZEVudGl0aWVzVHJhaXRLZXksXG59IGZyb20gJy4uL2xvYWQtZW50aXRpZXMvbG9hZC1lbnRpdGllcy5tb2RlbCc7XG5pbXBvcnQgeyBjcmVhdGVUcmFpdEZhY3RvcnkgfSBmcm9tICduZ3J4LXRyYWl0cyc7XG5pbXBvcnQgeyBDcnVkQWN0aW9ucyB9IGZyb20gJy4uL2NydWQvY3J1ZC5tb2RlbCc7XG5pbXBvcnQge1xuICBjcmVhdGVNdWx0aVNlbGVjdGlvbkluaXRpYWxTdGF0ZSxcbiAgY3JlYXRlTXVsdGlTZWxlY3Rpb25UcmFpdFJlZHVjZXIsXG59IGZyb20gJy4vbXVsdGktc2VsZWN0aW9uLnRyYWl0LnJlZHVjZXInO1xuaW1wb3J0IHsgY3JlYXRlTXVsdGlTZWxlY3Rpb25UcmFpdE11dGF0b3JzIH0gZnJvbSAnLi9tdWx0aS1zZWxlY3Rpb24udHJhaXQubXV0YXRvcnMnO1xuaW1wb3J0IHsgRmlsdGVyQWN0aW9ucyB9IGZyb20gJy4uL2ZpbHRlcic7XG5pbXBvcnQge1xuICBUcmFpdEFjdGlvbnNGYWN0b3J5Q29uZmlnLFxuICBUcmFpdEluaXRpYWxTdGF0ZUZhY3RvcnlDb25maWcsXG4gIFRyYWl0U2VsZWN0b3JzRmFjdG9yeUNvbmZpZyxcbiAgVHJhaXRTdGF0ZU11dGF0b3JzRmFjdG9yeUNvbmZpZyxcbn0gZnJvbSAnbmdyeC10cmFpdHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkTXVsdGlTZWxlY3Rpb248RW50aXR5PigpIHtcbiAgcmV0dXJuIGNyZWF0ZVRyYWl0RmFjdG9yeSh7XG4gICAga2V5OiAnbXVsdGlTZWxlY3Rpb24nLFxuICAgIGRlcGVuZHM6IFtsb2FkRW50aXRpZXNUcmFpdEtleV0sXG4gICAgYWN0aW9uczogKHsgYWN0aW9uc0dyb3VwS2V5IH06IFRyYWl0QWN0aW9uc0ZhY3RvcnlDb25maWcpID0+XG4gICAgICBjcmVhdGVNdWx0aVNlbGVjdGlvblRyYWl0QWN0aW9ucyhhY3Rpb25zR3JvdXBLZXkpLFxuICAgIHNlbGVjdG9yczogKHsgcHJldmlvdXNTZWxlY3RvcnMgfTogVHJhaXRTZWxlY3RvcnNGYWN0b3J5Q29uZmlnKSA9PlxuICAgICAgY3JlYXRlTXVsdGlTZWxlY3Rpb25UcmFpdFNlbGVjdG9yczxFbnRpdHk+KFxuICAgICAgICBwcmV2aW91c1NlbGVjdG9ycyBhcyBMb2FkRW50aXRpZXNTZWxlY3RvcnM8RW50aXR5PixcbiAgICAgICksXG4gICAgaW5pdGlhbFN0YXRlOiAoeyBwcmV2aW91c0luaXRpYWxTdGF0ZSB9OiBUcmFpdEluaXRpYWxTdGF0ZUZhY3RvcnlDb25maWcpID0+XG4gICAgICBjcmVhdGVNdWx0aVNlbGVjdGlvbkluaXRpYWxTdGF0ZTxFbnRpdHk+KHByZXZpb3VzSW5pdGlhbFN0YXRlKSxcbiAgICBtdXRhdG9yczogKHsgYWxsU2VsZWN0b3JzIH06IFRyYWl0U3RhdGVNdXRhdG9yc0ZhY3RvcnlDb25maWcpID0+XG4gICAgICBjcmVhdGVNdWx0aVNlbGVjdGlvblRyYWl0TXV0YXRvcnM8RW50aXR5PihcbiAgICAgICAgYWxsU2VsZWN0b3JzIGFzIE11bHRpcGxlU2VsZWN0aW9uU2VsZWN0b3JzPEVudGl0eT4sXG4gICAgICApLFxuICAgIHJlZHVjZXI6ICh7IGluaXRpYWxTdGF0ZSwgYWxsQWN0aW9ucywgYWxsTXV0YXRvcnMsIGFsbENvbmZpZ3MgfSkgPT5cbiAgICAgIGNyZWF0ZU11bHRpU2VsZWN0aW9uVHJhaXRSZWR1Y2VyKFxuICAgICAgICBpbml0aWFsU3RhdGUsXG4gICAgICAgIGFsbEFjdGlvbnMgYXMgTXVsdGlTZWxlY3RBY3Rpb25zICZcbiAgICAgICAgICBDcnVkQWN0aW9uczxFbnRpdHk+ICZcbiAgICAgICAgICBTb3J0QWN0aW9uczxFbnRpdHk+ICZcbiAgICAgICAgICBMb2FkRW50aXRpZXNBY3Rpb25zPEVudGl0eT4gJlxuICAgICAgICAgIEZpbHRlckFjdGlvbnM8YW55PiAmXG4gICAgICAgICAgUGFnaW5hdGlvbkFjdGlvbnMsXG4gICAgICAgIGFsbE11dGF0b3JzLFxuICAgICAgICBhbGxDb25maWdzIGFzIExvYWRFbnRpdGllc0tleWVkQ29uZmlnPEVudGl0eT4gJlxuICAgICAgICAgIFBhZ2luYXRpb25LZXllZENvbmZpZyAmXG4gICAgICAgICAgU29ydEtleWVkQ29uZmlnPEVudGl0eT4sXG4gICAgICApLFxuICB9KTtcbn1cbiJdfQ==
