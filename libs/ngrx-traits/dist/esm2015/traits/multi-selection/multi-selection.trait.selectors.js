import { createSelector } from '@ngrx/store';
import { selectTotalSelected } from './multi-selection.utils';
export function createMultiSelectionTraitSelectors(previousSelectors) {
  const { selectEntities, selectTotal } = previousSelectors;
  function selectIdsSelected(state) {
    return state.selectedIds;
  }
  const selectAllIdsSelected = createSelector(selectIdsSelected, (ids) =>
    Object.keys(ids)
  );
  const selectEntitiesSelected = createSelector(
    selectAllIdsSelected,
    selectEntities,
    (selectedIds, entities) =>
      selectedIds.reduce((acum, id) => {
        acum[id] = entities[id];
        return acum;
      }, {})
  );
  const selectAllSelected = createSelector(
    selectAllIdsSelected,
    selectEntities,
    (selectedIds, entities) => selectedIds.map((id) => entities[id])
  );
  const isAllSelected = createSelector(
    (state) => selectTotal(state),
    selectTotalSelected,
    (total, totalSelected) =>
      totalSelected === total ? 'all' : totalSelected === 0 ? 'none' : 'some'
  );
  return {
    selectIdsSelected,
    selectAllIdsSelected,
    selectEntitiesSelected,
    selectAllSelected,
    selectTotalSelected,
    isAllSelected,
  };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0aW9uLnRyYWl0LnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RyYWl0cy9zcmMvbXVsdGktc2VsZWN0aW9uL211bHRpLXNlbGVjdGlvbi50cmFpdC5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUM3QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQVE5RCxNQUFNLFVBQVUsa0NBQWtDLENBQ2hELGlCQUFnRDtJQUVoRCxNQUFNLEVBQUUsY0FBYyxFQUFFLFdBQVcsRUFBRSxHQUFHLGlCQUFpQixDQUFDO0lBRTFELFNBQVMsaUJBQWlCLENBQUMsS0FBOEM7UUFDdkUsT0FBTyxLQUFLLENBQUMsV0FBVyxDQUFDO0lBQzNCLENBQUM7SUFDRCxNQUFNLG9CQUFvQixHQUFHLGNBQWMsQ0FDekMsaUJBQWlCLEVBQ2pCLENBQUMsR0FBd0IsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FDL0MsQ0FBQztJQUNGLE1BQU0sc0JBQXNCLEdBQUcsY0FBYyxDQUMzQyxvQkFBb0IsRUFDcEIsY0FBYyxFQUNkLENBQUMsV0FBVyxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQ3hCLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUEwQyxFQUFFLEVBQUUsRUFBRSxFQUFFO1FBQ3BFLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQ1QsQ0FBQztJQUNGLE1BQU0saUJBQWlCLEdBQUcsY0FBYyxDQUN0QyxvQkFBb0IsRUFDcEIsY0FBYyxFQUNkLENBQUMsV0FBVyxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBRSxDQUFDLENBQ2xFLENBQUM7SUFFRixNQUFNLGFBQWEsR0FBRyxjQUFjLENBQ2xDLENBQUMsS0FBOEMsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUN0RSxtQkFBbUIsRUFDbkIsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFLEVBQUUsQ0FDdkIsYUFBYSxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxhQUFhLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FDMUUsQ0FBQztJQUVGLE9BQU87UUFDTCxpQkFBaUI7UUFDakIsb0JBQW9CO1FBQ3BCLHNCQUFzQjtRQUN0QixpQkFBaUI7UUFDakIsbUJBQW1CO1FBQ25CLGFBQWE7S0FDZCxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgc2VsZWN0VG90YWxTZWxlY3RlZCB9IGZyb20gJy4vbXVsdGktc2VsZWN0aW9uLnV0aWxzJztcbmltcG9ydCB7XG4gIEVudGl0eUFuZE11bHRpcGxlU2VsZWN0aW9uU3RhdGUsXG4gIE11bHRpcGxlU2VsZWN0aW9uU2VsZWN0b3JzLFxufSBmcm9tICcuL211bHRpLXNlbGVjdGlvbi5tb2RlbCc7XG5pbXBvcnQgeyBMb2FkRW50aXRpZXNTZWxlY3RvcnMgfSBmcm9tICcuLi9sb2FkLWVudGl0aWVzJztcbmltcG9ydCB7IERpY3Rpb25hcnkgfSBmcm9tICdAbmdyeC9lbnRpdHkvc3JjL21vZGVscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNdWx0aVNlbGVjdGlvblRyYWl0U2VsZWN0b3JzPEVudGl0eT4oXG4gIHByZXZpb3VzU2VsZWN0b3JzOiBMb2FkRW50aXRpZXNTZWxlY3RvcnM8RW50aXR5Pixcbik6IE11bHRpcGxlU2VsZWN0aW9uU2VsZWN0b3JzPEVudGl0eT4ge1xuICBjb25zdCB7IHNlbGVjdEVudGl0aWVzLCBzZWxlY3RUb3RhbCB9ID0gcHJldmlvdXNTZWxlY3RvcnM7XG5cbiAgZnVuY3Rpb24gc2VsZWN0SWRzU2VsZWN0ZWQoc3RhdGU6IEVudGl0eUFuZE11bHRpcGxlU2VsZWN0aW9uU3RhdGU8RW50aXR5Pikge1xuICAgIHJldHVybiBzdGF0ZS5zZWxlY3RlZElkcztcbiAgfVxuICBjb25zdCBzZWxlY3RBbGxJZHNTZWxlY3RlZCA9IGNyZWF0ZVNlbGVjdG9yKFxuICAgIHNlbGVjdElkc1NlbGVjdGVkLFxuICAgIChpZHM6IERpY3Rpb25hcnk8Ym9vbGVhbj4pID0+IE9iamVjdC5rZXlzKGlkcyksXG4gICk7XG4gIGNvbnN0IHNlbGVjdEVudGl0aWVzU2VsZWN0ZWQgPSBjcmVhdGVTZWxlY3RvcihcbiAgICBzZWxlY3RBbGxJZHNTZWxlY3RlZCxcbiAgICBzZWxlY3RFbnRpdGllcyxcbiAgICAoc2VsZWN0ZWRJZHMsIGVudGl0aWVzKSA9PlxuICAgICAgc2VsZWN0ZWRJZHMucmVkdWNlKChhY3VtOiB7IFtpZDogc3RyaW5nXTogRW50aXR5IHwgdW5kZWZpbmVkIH0sIGlkKSA9PiB7XG4gICAgICAgIGFjdW1baWRdID0gZW50aXRpZXNbaWRdO1xuICAgICAgICByZXR1cm4gYWN1bTtcbiAgICAgIH0sIHt9KSxcbiAgKTtcbiAgY29uc3Qgc2VsZWN0QWxsU2VsZWN0ZWQgPSBjcmVhdGVTZWxlY3RvcihcbiAgICBzZWxlY3RBbGxJZHNTZWxlY3RlZCxcbiAgICBzZWxlY3RFbnRpdGllcyxcbiAgICAoc2VsZWN0ZWRJZHMsIGVudGl0aWVzKSA9PiBzZWxlY3RlZElkcy5tYXAoKGlkKSA9PiBlbnRpdGllc1tpZF0hKSxcbiAgKTtcblxuICBjb25zdCBpc0FsbFNlbGVjdGVkID0gY3JlYXRlU2VsZWN0b3IoXG4gICAgKHN0YXRlOiBFbnRpdHlBbmRNdWx0aXBsZVNlbGVjdGlvblN0YXRlPEVudGl0eT4pID0+IHNlbGVjdFRvdGFsKHN0YXRlKSxcbiAgICBzZWxlY3RUb3RhbFNlbGVjdGVkLFxuICAgICh0b3RhbCwgdG90YWxTZWxlY3RlZCkgPT5cbiAgICAgIHRvdGFsU2VsZWN0ZWQgPT09IHRvdGFsID8gJ2FsbCcgOiB0b3RhbFNlbGVjdGVkID09PSAwID8gJ25vbmUnIDogJ3NvbWUnLFxuICApO1xuXG4gIHJldHVybiB7XG4gICAgc2VsZWN0SWRzU2VsZWN0ZWQsXG4gICAgc2VsZWN0QWxsSWRzU2VsZWN0ZWQsXG4gICAgc2VsZWN0RW50aXRpZXNTZWxlY3RlZCxcbiAgICBzZWxlY3RBbGxTZWxlY3RlZCxcbiAgICBzZWxlY3RUb3RhbFNlbGVjdGVkLFxuICAgIGlzQWxsU2VsZWN0ZWQsXG4gIH07XG59XG4iXX0=
