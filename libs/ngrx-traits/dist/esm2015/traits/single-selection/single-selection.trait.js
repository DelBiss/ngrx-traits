import { createTraitFactory } from 'ngrx-traits';
import { createSingleSelectionTraitActions } from './single-selection.trait.actions';
import { createSingleSelectionTraitSelectors } from './single-selection.trait.selectors';
import {
  createSingleSelectionInitialState,
  createSingleSelectionTraitReducer,
} from './single-selection.trait.reducer';
import { createSingleSelectionTraitMutators } from './single-selection.trait.mutators';
import { loadEntitiesTraitKey } from '../load-entities/load-entities.model';
export function addSingleSelection(config) {
  return createTraitFactory({
    key: 'singleSelection',
    depends: [loadEntitiesTraitKey],
    config,
    actions: ({ actionsGroupKey }) =>
      createSingleSelectionTraitActions(actionsGroupKey),
    selectors: () => createSingleSelectionTraitSelectors(),
    mutators: () => createSingleSelectionTraitMutators(),
    initialState: ({ previousInitialState, allConfigs }) =>
      createSingleSelectionInitialState(previousInitialState, allConfigs),
    reducer: ({ initialState, allActions, allMutators, allConfigs }) =>
      createSingleSelectionTraitReducer(
        initialState,
        allActions,
        allMutators,
        allConfigs
      ),
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXNlbGVjdGlvbi50cmFpdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RyYWl0cy9zcmMvc2luZ2xlLXNlbGVjdGlvbi9zaW5nbGUtc2VsZWN0aW9uLnRyYWl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxrQkFBa0IsR0FHbkIsTUFBTSxhQUFhLENBQUM7QUFFckIsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDckYsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDekYsT0FBTyxFQUNMLGlDQUFpQyxFQUNqQyxpQ0FBaUMsR0FDbEMsTUFBTSxrQ0FBa0MsQ0FBQztBQUMxQyxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RixPQUFPLEVBR0wsb0JBQW9CLEdBQ3JCLE1BQU0sc0NBQXNDLENBQUM7QUFjOUMsTUFBTSxVQUFVLGtCQUFrQixDQUFTLE1BQThCO0lBQ3ZFLE9BQU8sa0JBQWtCLENBQUM7UUFDeEIsR0FBRyxFQUFFLGlCQUFpQjtRQUN0QixPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztRQUMvQixNQUFNO1FBQ04sT0FBTyxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQTZCLEVBQUUsRUFBRSxDQUMxRCxpQ0FBaUMsQ0FBQyxlQUFlLENBQUM7UUFDcEQsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDLG1DQUFtQyxFQUFVO1FBQzlELFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxrQ0FBa0MsRUFBRTtRQUNwRCxZQUFZLEVBQUUsQ0FBQyxFQUNiLG9CQUFvQixFQUNwQixVQUFVLEdBQ3FCLEVBQUUsRUFBRSxDQUNuQyxpQ0FBaUMsQ0FDL0Isb0JBQW9CLEVBQ3BCLFVBQXdDLENBQ3pDO1FBQ0gsT0FBTyxFQUFFLENBQUMsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLENBQ2pFLGlDQUFpQyxDQUMvQixZQUFZLEVBQ1osVUFLNkIsRUFDN0IsV0FBVyxFQUNYLFVBR3lCLENBQzFCO0tBQ0osQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZVRyYWl0RmFjdG9yeSxcbiAgVHJhaXRBY3Rpb25zRmFjdG9yeUNvbmZpZyxcbiAgVHJhaXRJbml0aWFsU3RhdGVGYWN0b3J5Q29uZmlnLFxufSBmcm9tICduZ3J4LXRyYWl0cyc7XG5cbmltcG9ydCB7IGNyZWF0ZVNpbmdsZVNlbGVjdGlvblRyYWl0QWN0aW9ucyB9IGZyb20gJy4vc2luZ2xlLXNlbGVjdGlvbi50cmFpdC5hY3Rpb25zJztcbmltcG9ydCB7IGNyZWF0ZVNpbmdsZVNlbGVjdGlvblRyYWl0U2VsZWN0b3JzIH0gZnJvbSAnLi9zaW5nbGUtc2VsZWN0aW9uLnRyYWl0LnNlbGVjdG9ycyc7XG5pbXBvcnQge1xuICBjcmVhdGVTaW5nbGVTZWxlY3Rpb25Jbml0aWFsU3RhdGUsXG4gIGNyZWF0ZVNpbmdsZVNlbGVjdGlvblRyYWl0UmVkdWNlcixcbn0gZnJvbSAnLi9zaW5nbGUtc2VsZWN0aW9uLnRyYWl0LnJlZHVjZXInO1xuaW1wb3J0IHsgY3JlYXRlU2luZ2xlU2VsZWN0aW9uVHJhaXRNdXRhdG9ycyB9IGZyb20gJy4vc2luZ2xlLXNlbGVjdGlvbi50cmFpdC5tdXRhdG9ycyc7XG5pbXBvcnQge1xuICBMb2FkRW50aXRpZXNBY3Rpb25zLFxuICBMb2FkRW50aXRpZXNLZXllZENvbmZpZyxcbiAgbG9hZEVudGl0aWVzVHJhaXRLZXksXG59IGZyb20gJy4uL2xvYWQtZW50aXRpZXMvbG9hZC1lbnRpdGllcy5tb2RlbCc7XG5pbXBvcnQgeyBTb3J0QWN0aW9ucywgU29ydEtleWVkQ29uZmlnIH0gZnJvbSAnLi4vc29ydC9zb3J0Lm1vZGVsJztcbmltcG9ydCB7XG4gIFNpbmdsZVNlbGVjdGlvbkFjdGlvbnMsXG4gIFNpbmdsZVNlbGVjdGlvbkNvbmZpZyxcbiAgU2luZ2xlU2VsZWN0aW9uS2V5ZWRDb25maWcsXG59IGZyb20gJy4vc2luZ2xlLXNlbGVjdGlvbi5tb2RlbCc7XG5pbXBvcnQgeyBDcnVkQWN0aW9ucyB9IGZyb20gJy4uL2NydWQvY3J1ZC5tb2RlbCc7XG5pbXBvcnQge1xuICBQYWdpbmF0aW9uQWN0aW9ucyxcbiAgUGFnaW5hdGlvbktleWVkQ29uZmlnLFxufSBmcm9tICcuLi9wYWdpbmF0aW9uL3BhZ2luYXRpb24ubW9kZWwnO1xuaW1wb3J0IHsgRmlsdGVyQWN0aW9ucyB9IGZyb20gJy4uL2ZpbHRlcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRTaW5nbGVTZWxlY3Rpb248RW50aXR5Pihjb25maWc/OiBTaW5nbGVTZWxlY3Rpb25Db25maWcpIHtcbiAgcmV0dXJuIGNyZWF0ZVRyYWl0RmFjdG9yeSh7XG4gICAga2V5OiAnc2luZ2xlU2VsZWN0aW9uJyxcbiAgICBkZXBlbmRzOiBbbG9hZEVudGl0aWVzVHJhaXRLZXldLFxuICAgIGNvbmZpZyxcbiAgICBhY3Rpb25zOiAoeyBhY3Rpb25zR3JvdXBLZXkgfTogVHJhaXRBY3Rpb25zRmFjdG9yeUNvbmZpZykgPT5cbiAgICAgIGNyZWF0ZVNpbmdsZVNlbGVjdGlvblRyYWl0QWN0aW9ucyhhY3Rpb25zR3JvdXBLZXkpLFxuICAgIHNlbGVjdG9yczogKCkgPT4gY3JlYXRlU2luZ2xlU2VsZWN0aW9uVHJhaXRTZWxlY3RvcnM8RW50aXR5PigpLFxuICAgIG11dGF0b3JzOiAoKSA9PiBjcmVhdGVTaW5nbGVTZWxlY3Rpb25UcmFpdE11dGF0b3JzKCksXG4gICAgaW5pdGlhbFN0YXRlOiAoe1xuICAgICAgcHJldmlvdXNJbml0aWFsU3RhdGUsXG4gICAgICBhbGxDb25maWdzLFxuICAgIH06IFRyYWl0SW5pdGlhbFN0YXRlRmFjdG9yeUNvbmZpZykgPT5cbiAgICAgIGNyZWF0ZVNpbmdsZVNlbGVjdGlvbkluaXRpYWxTdGF0ZTxFbnRpdHk+KFxuICAgICAgICBwcmV2aW91c0luaXRpYWxTdGF0ZSxcbiAgICAgICAgYWxsQ29uZmlncyBhcyBTaW5nbGVTZWxlY3Rpb25LZXllZENvbmZpZyxcbiAgICAgICksXG4gICAgcmVkdWNlcjogKHsgaW5pdGlhbFN0YXRlLCBhbGxBY3Rpb25zLCBhbGxNdXRhdG9ycywgYWxsQ29uZmlncyB9KSA9PlxuICAgICAgY3JlYXRlU2luZ2xlU2VsZWN0aW9uVHJhaXRSZWR1Y2VyKFxuICAgICAgICBpbml0aWFsU3RhdGUsXG4gICAgICAgIGFsbEFjdGlvbnMgYXMgU2luZ2xlU2VsZWN0aW9uQWN0aW9ucyAmXG4gICAgICAgICAgQ3J1ZEFjdGlvbnM8RW50aXR5PiAmXG4gICAgICAgICAgU29ydEFjdGlvbnM8RW50aXR5PiAmXG4gICAgICAgICAgUGFnaW5hdGlvbkFjdGlvbnMgJlxuICAgICAgICAgIEZpbHRlckFjdGlvbnM8YW55PiAmXG4gICAgICAgICAgTG9hZEVudGl0aWVzQWN0aW9uczxFbnRpdHk+LFxuICAgICAgICBhbGxNdXRhdG9ycyxcbiAgICAgICAgYWxsQ29uZmlncyBhcyBTaW5nbGVTZWxlY3Rpb25LZXllZENvbmZpZyAmXG4gICAgICAgICAgTG9hZEVudGl0aWVzS2V5ZWRDb25maWc8RW50aXR5PiAmXG4gICAgICAgICAgUGFnaW5hdGlvbktleWVkQ29uZmlnICZcbiAgICAgICAgICBTb3J0S2V5ZWRDb25maWc8RW50aXR5PixcbiAgICAgICksXG4gIH0pO1xufVxuIl19
