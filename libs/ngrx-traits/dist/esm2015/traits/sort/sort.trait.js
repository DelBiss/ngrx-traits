import { createSortTraitMutators } from './sort.trait.mutators';
import {
  createSortInitialState,
  createSortTraitReducer,
} from './sort.trait.reducer';
import { createSortTraitSelectors } from './sort.trait.selectors';
import { createSortTraitEffect } from './sort.trait.effect';
import { sortTraitKey } from './sort.model';
import { loadEntitiesTraitKey } from '../load-entities/load-entities.model';
import { createTraitFactory } from 'ngrx-traits';
import { createSortTraitActions } from './sort.trait.actions';
export function addSort({ remote = false, defaultSort } = {}) {
  return createTraitFactory({
    key: sortTraitKey,
    depends: [loadEntitiesTraitKey],
    config: { remote, defaultSort },
    actions: ({ actionsGroupKey }) => createSortTraitActions(actionsGroupKey),
    selectors: () => createSortTraitSelectors(),
    mutators: ({ allSelectors, allConfigs }) =>
      createSortTraitMutators(allSelectors, allConfigs),
    initialState: ({ previousInitialState, allConfigs }) =>
      createSortInitialState(previousInitialState, allConfigs),
    reducer: ({ initialState, allActions, allMutators, allConfigs }) =>
      createSortTraitReducer(initialState, allActions, allMutators, allConfigs),
    effects: ({ allActions, allConfigs }) =>
      createSortTraitEffect(allActions, allConfigs),
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC50cmFpdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RyYWl0cy9zcmMvc29ydC9zb3J0LnRyYWl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2hFLE9BQU8sRUFDTCxzQkFBc0IsRUFDdEIsc0JBQXNCLEdBQ3ZCLE1BQU0sc0JBQXNCLENBQUM7QUFDOUIsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUQsT0FBTyxFQUtMLFlBQVksR0FDYixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBSUwsb0JBQW9CLEdBQ3JCLE1BQU0sc0NBQXNDLENBQUM7QUFLOUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBTzlELE1BQU0sVUFBVSxPQUFPLENBQVMsRUFDOUIsTUFBTSxHQUFHLEtBQUssRUFDZCxXQUFXLE1BQ1csRUFBRTtJQUN4QixPQUFPLGtCQUFrQixDQUFDO1FBQ3hCLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQXdCO1FBQ3JELE9BQU8sRUFBRSxDQUFDLEVBQUUsZUFBZSxFQUE2QixFQUFFLEVBQUUsQ0FDMUQsc0JBQXNCLENBQVMsZUFBZSxDQUFDO1FBQ2pELFNBQVMsRUFBRSxHQUFHLEVBQUUsQ0FBQyx3QkFBd0IsRUFBVTtRQUNuRCxRQUFRLEVBQUUsQ0FBQyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQW1DLEVBQUUsRUFBRSxDQUMxRSx1QkFBdUIsQ0FDckIsWUFBcUUsRUFDckUsVUFBVSxDQUNYO1FBQ0gsWUFBWSxFQUFFLENBQUMsRUFDYixvQkFBb0IsRUFDcEIsVUFBVSxHQUNxQixFQUFFLEVBQUUsQ0FDbkMsc0JBQXNCLENBQVMsb0JBQW9CLEVBQUUsVUFBVSxDQUFDO1FBQ2xFLE9BQU8sRUFBRSxDQUFDLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxDQUNqRSxzQkFBc0IsQ0FDcEIsWUFBWSxFQUNaLFVBQStELEVBQy9ELFdBQVcsRUFDWCxVQUV5QixDQUMxQjtRQUNILE9BQU8sRUFBRSxDQUFDLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FDdEMscUJBQXFCLENBQ25CLFVBRW1CLEVBQ25CLFVBQXVFLENBQ3hFO0tBQ0osQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNvcnRUcmFpdE11dGF0b3JzIH0gZnJvbSAnLi9zb3J0LnRyYWl0Lm11dGF0b3JzJztcbmltcG9ydCB7XG4gIGNyZWF0ZVNvcnRJbml0aWFsU3RhdGUsXG4gIGNyZWF0ZVNvcnRUcmFpdFJlZHVjZXIsXG59IGZyb20gJy4vc29ydC50cmFpdC5yZWR1Y2VyJztcbmltcG9ydCB7IGNyZWF0ZVNvcnRUcmFpdFNlbGVjdG9ycyB9IGZyb20gJy4vc29ydC50cmFpdC5zZWxlY3RvcnMnO1xuaW1wb3J0IHsgY3JlYXRlU29ydFRyYWl0RWZmZWN0IH0gZnJvbSAnLi9zb3J0LnRyYWl0LmVmZmVjdCc7XG5pbXBvcnQge1xuICBTb3J0QWN0aW9ucyxcbiAgU29ydENvbmZpZyxcbiAgU29ydEtleWVkQ29uZmlnLFxuICBTb3J0U2VsZWN0b3JzLFxuICBzb3J0VHJhaXRLZXksXG59IGZyb20gJy4vc29ydC5tb2RlbCc7XG5pbXBvcnQge1xuICBMb2FkRW50aXRpZXNBY3Rpb25zLFxuICBMb2FkRW50aXRpZXNLZXllZENvbmZpZyxcbiAgTG9hZEVudGl0aWVzU2VsZWN0b3JzLFxuICBsb2FkRW50aXRpZXNUcmFpdEtleSxcbn0gZnJvbSAnLi4vbG9hZC1lbnRpdGllcy9sb2FkLWVudGl0aWVzLm1vZGVsJztcbmltcG9ydCB7XG4gIFBhZ2luYXRpb25BY3Rpb25zLFxuICBQYWdpbmF0aW9uS2V5ZWRDb25maWcsXG59IGZyb20gJy4uL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5tb2RlbCc7XG5pbXBvcnQgeyBjcmVhdGVUcmFpdEZhY3RvcnkgfSBmcm9tICduZ3J4LXRyYWl0cyc7XG5pbXBvcnQgeyBjcmVhdGVTb3J0VHJhaXRBY3Rpb25zIH0gZnJvbSAnLi9zb3J0LnRyYWl0LmFjdGlvbnMnO1xuaW1wb3J0IHtcbiAgVHJhaXRBY3Rpb25zRmFjdG9yeUNvbmZpZyxcbiAgVHJhaXRJbml0aWFsU3RhdGVGYWN0b3J5Q29uZmlnLFxuICBUcmFpdFN0YXRlTXV0YXRvcnNGYWN0b3J5Q29uZmlnLFxufSBmcm9tICduZ3J4LXRyYWl0cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRTb3J0PEVudGl0eT4oe1xuICByZW1vdGUgPSBmYWxzZSxcbiAgZGVmYXVsdFNvcnQsXG59OiBTb3J0Q29uZmlnPEVudGl0eT4gPSB7fSkge1xuICByZXR1cm4gY3JlYXRlVHJhaXRGYWN0b3J5KHtcbiAgICBrZXk6IHNvcnRUcmFpdEtleSxcbiAgICBkZXBlbmRzOiBbbG9hZEVudGl0aWVzVHJhaXRLZXldLFxuICAgIGNvbmZpZzogeyByZW1vdGUsIGRlZmF1bHRTb3J0IH0gYXMgU29ydENvbmZpZzxFbnRpdHk+LFxuICAgIGFjdGlvbnM6ICh7IGFjdGlvbnNHcm91cEtleSB9OiBUcmFpdEFjdGlvbnNGYWN0b3J5Q29uZmlnKSA9PlxuICAgICAgY3JlYXRlU29ydFRyYWl0QWN0aW9uczxFbnRpdHk+KGFjdGlvbnNHcm91cEtleSksXG4gICAgc2VsZWN0b3JzOiAoKSA9PiBjcmVhdGVTb3J0VHJhaXRTZWxlY3RvcnM8RW50aXR5PigpLFxuICAgIG11dGF0b3JzOiAoeyBhbGxTZWxlY3RvcnMsIGFsbENvbmZpZ3MgfTogVHJhaXRTdGF0ZU11dGF0b3JzRmFjdG9yeUNvbmZpZykgPT5cbiAgICAgIGNyZWF0ZVNvcnRUcmFpdE11dGF0b3JzPEVudGl0eT4oXG4gICAgICAgIGFsbFNlbGVjdG9ycyBhcyBTb3J0U2VsZWN0b3JzPEVudGl0eT4gJiBMb2FkRW50aXRpZXNTZWxlY3RvcnM8RW50aXR5PixcbiAgICAgICAgYWxsQ29uZmlncyxcbiAgICAgICksXG4gICAgaW5pdGlhbFN0YXRlOiAoe1xuICAgICAgcHJldmlvdXNJbml0aWFsU3RhdGUsXG4gICAgICBhbGxDb25maWdzLFxuICAgIH06IFRyYWl0SW5pdGlhbFN0YXRlRmFjdG9yeUNvbmZpZykgPT5cbiAgICAgIGNyZWF0ZVNvcnRJbml0aWFsU3RhdGU8RW50aXR5PihwcmV2aW91c0luaXRpYWxTdGF0ZSwgYWxsQ29uZmlncyksXG4gICAgcmVkdWNlcjogKHsgaW5pdGlhbFN0YXRlLCBhbGxBY3Rpb25zLCBhbGxNdXRhdG9ycywgYWxsQ29uZmlncyB9KSA9PlxuICAgICAgY3JlYXRlU29ydFRyYWl0UmVkdWNlcjxFbnRpdHk+KFxuICAgICAgICBpbml0aWFsU3RhdGUsXG4gICAgICAgIGFsbEFjdGlvbnMgYXMgU29ydEFjdGlvbnM8RW50aXR5PiAmIExvYWRFbnRpdGllc0FjdGlvbnM8RW50aXR5PixcbiAgICAgICAgYWxsTXV0YXRvcnMsXG4gICAgICAgIGFsbENvbmZpZ3MgYXMgTG9hZEVudGl0aWVzS2V5ZWRDb25maWc8RW50aXR5PiAmXG4gICAgICAgICAgUGFnaW5hdGlvbktleWVkQ29uZmlnICZcbiAgICAgICAgICBTb3J0S2V5ZWRDb25maWc8RW50aXR5PixcbiAgICAgICksXG4gICAgZWZmZWN0czogKHsgYWxsQWN0aW9ucywgYWxsQ29uZmlncyB9KSA9PlxuICAgICAgY3JlYXRlU29ydFRyYWl0RWZmZWN0KFxuICAgICAgICBhbGxBY3Rpb25zIGFzIExvYWRFbnRpdGllc0FjdGlvbnM8RW50aXR5PiAmXG4gICAgICAgICAgU29ydEFjdGlvbnM8RW50aXR5PiAmXG4gICAgICAgICAgUGFnaW5hdGlvbkFjdGlvbnMsXG4gICAgICAgIGFsbENvbmZpZ3MgYXMgTG9hZEVudGl0aWVzS2V5ZWRDb25maWc8RW50aXR5PiAmIFNvcnRLZXllZENvbmZpZzxFbnRpdHk+LFxuICAgICAgKSxcbiAgfSk7XG59XG4iXX0=
