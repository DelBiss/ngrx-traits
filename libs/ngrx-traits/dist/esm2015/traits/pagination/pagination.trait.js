import { paginationTraitKey } from './pagination.model';
import { createPaginationTraitSelectors } from './pagination.trait.selectors';
import { createPaginationTraitActions } from './pagination.trait.actions';
import { loadEntitiesTraitKey } from '../load-entities/load-entities.model';
import {
  createPaginationInitialState,
  createPaginationTraitReducer,
} from './pagination.trait.reducer';
import { createPaginationTraitEffects } from './pagination.trait.effects';
import { createTraitFactory } from 'ngrx-traits';
import { createPaginationTraitMutators } from './pagination.trait.mutators';
export function addPagination({
  cacheType = 'full',
  pageSize = 20,
  currentPage = 0,
  pagesToCache = 3,
} = {}) {
  return createTraitFactory({
    key: paginationTraitKey,
    depends: [loadEntitiesTraitKey],
    config: {
      cacheType,
      pageSize,
      currentPage,
      pagesToCache,
    },
    actions: ({ actionsGroupKey }) =>
      createPaginationTraitActions(actionsGroupKey),
    selectors: ({ previousSelectors, allConfigs }) =>
      createPaginationTraitSelectors(previousSelectors, allConfigs),
    mutators: ({ allSelectors, allConfigs }) =>
      createPaginationTraitMutators(allSelectors, allConfigs),
    initialState: ({ previousInitialState, allConfigs }) =>
      createPaginationInitialState(previousInitialState, allConfigs),
    reducer: ({
      initialState,
      allActions,
      allSelectors,
      allMutators,
      allConfigs,
    }) =>
      createPaginationTraitReducer(
        initialState,
        allActions,
        allSelectors,
        allMutators,
        allConfigs
      ),
    effects: ({ allActions, allSelectors }) =>
      createPaginationTraitEffects(allActions, allSelectors),
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi50cmFpdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RyYWl0cy9zcmMvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLnRyYWl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFLTCxrQkFBa0IsR0FDbkIsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM5RSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUUxRSxPQUFPLEVBS0wsb0JBQW9CLEdBQ3JCLE1BQU0sc0NBQXNDLENBQUM7QUFDOUMsT0FBTyxFQUNMLDRCQUE0QixFQUM1Qiw0QkFBNEIsR0FDN0IsTUFBTSw0QkFBNEIsQ0FBQztBQUNwQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFakQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFRNUUsTUFBTSxVQUFVLGFBQWEsQ0FBUyxFQUNwQyxTQUFTLEdBQUcsTUFBTSxFQUNsQixRQUFRLEdBQUcsRUFBRSxFQUNiLFdBQVcsR0FBRyxDQUFDLEVBQ2YsWUFBWSxHQUFHLENBQUMsTUFDSSxFQUFFO0lBQ3RCLE9BQU8sa0JBQWtCLENBQUM7UUFDeEIsR0FBRyxFQUFFLGtCQUFrQjtRQUN2QixPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztRQUMvQixNQUFNLEVBQUU7WUFDTixTQUFTO1lBQ1QsUUFBUTtZQUNSLFdBQVc7WUFDWCxZQUFZO1NBQ087UUFDckIsT0FBTyxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQTZCLEVBQUUsRUFBRSxDQUMxRCw0QkFBNEIsQ0FBQyxlQUFlLENBQUM7UUFDL0MsU0FBUyxFQUFFLENBQUMsRUFDVixpQkFBaUIsRUFDakIsVUFBVSxHQUNrQixFQUFFLEVBQUUsQ0FDaEMsOEJBQThCLENBQzVCLGlCQUFrRCxFQUNsRCxVQUNvQyxDQUNyQztRQUNILFFBQVEsRUFBRSxDQUFDLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FDekMsNkJBQTZCLENBQzNCLFlBQytCLEVBQy9CLFVBQXFFLENBQ3RFO1FBQ0gsWUFBWSxFQUFFLENBQUMsRUFDYixvQkFBb0IsRUFDcEIsVUFBVSxHQUNxQixFQUFFLEVBQUUsQ0FDbkMsNEJBQTRCLENBQzFCLG9CQUFvQixFQUNwQixVQUFtQyxDQUNwQztRQUNILE9BQU8sRUFBRSxDQUFDLEVBQ1IsWUFBWSxFQUNaLFVBQVUsRUFDVixZQUFZLEVBQ1osV0FBVyxFQUNYLFVBQVUsR0FDWCxFQUFFLEVBQUUsQ0FDSCw0QkFBNEIsQ0FDMUIsWUFBWSxFQUNaLFVBR3FCLEVBQ3JCLFlBQytCLEVBQy9CLFdBQzhCLEVBQzlCLFVBRXVCLENBQ3hCO1FBQ0gsT0FBTyxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxDQUN4Qyw0QkFBNEIsQ0FDMUIsVUFHcUIsRUFDckIsWUFDK0IsQ0FDaEM7S0FDSixDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUGFnaW5hdGlvbkNvbmZpZyxcbiAgUGFnaW5hdGlvbktleWVkQ29uZmlnLFxuICBQYWdpbmF0aW9uTXV0YXRvcnMsXG4gIFBhZ2luYXRpb25TZWxlY3RvcnMsXG4gIHBhZ2luYXRpb25UcmFpdEtleSxcbn0gZnJvbSAnLi9wYWdpbmF0aW9uLm1vZGVsJztcbmltcG9ydCB7IGNyZWF0ZVBhZ2luYXRpb25UcmFpdFNlbGVjdG9ycyB9IGZyb20gJy4vcGFnaW5hdGlvbi50cmFpdC5zZWxlY3RvcnMnO1xuaW1wb3J0IHsgY3JlYXRlUGFnaW5hdGlvblRyYWl0QWN0aW9ucyB9IGZyb20gJy4vcGFnaW5hdGlvbi50cmFpdC5hY3Rpb25zJztcbmltcG9ydCB7IEZpbHRlckFjdGlvbnMsIEZpbHRlcktleWVkQ29uZmlnIH0gZnJvbSAnLi4vZmlsdGVyL2ZpbHRlci5tb2RlbCc7XG5pbXBvcnQge1xuICBMb2FkRW50aXRpZXNBY3Rpb25zLFxuICBMb2FkRW50aXRpZXNLZXllZENvbmZpZyxcbiAgTG9hZEVudGl0aWVzTXV0YXRvcnMsXG4gIExvYWRFbnRpdGllc1NlbGVjdG9ycyxcbiAgbG9hZEVudGl0aWVzVHJhaXRLZXksXG59IGZyb20gJy4uL2xvYWQtZW50aXRpZXMvbG9hZC1lbnRpdGllcy5tb2RlbCc7XG5pbXBvcnQge1xuICBjcmVhdGVQYWdpbmF0aW9uSW5pdGlhbFN0YXRlLFxuICBjcmVhdGVQYWdpbmF0aW9uVHJhaXRSZWR1Y2VyLFxufSBmcm9tICcuL3BhZ2luYXRpb24udHJhaXQucmVkdWNlcic7XG5pbXBvcnQgeyBjcmVhdGVQYWdpbmF0aW9uVHJhaXRFZmZlY3RzIH0gZnJvbSAnLi9wYWdpbmF0aW9uLnRyYWl0LmVmZmVjdHMnO1xuaW1wb3J0IHsgY3JlYXRlVHJhaXRGYWN0b3J5IH0gZnJvbSAnbmdyeC10cmFpdHMnO1xuaW1wb3J0IHsgQ3J1ZEFjdGlvbnMgfSBmcm9tICcuLi9jcnVkL2NydWQubW9kZWwnO1xuaW1wb3J0IHsgY3JlYXRlUGFnaW5hdGlvblRyYWl0TXV0YXRvcnMgfSBmcm9tICcuL3BhZ2luYXRpb24udHJhaXQubXV0YXRvcnMnO1xuaW1wb3J0IHsgxp9QYWdpbmF0aW9uQWN0aW9ucyB9IGZyb20gJy4vcGFnaW5hdGlvbi5tb2RlbC5pbnRlcm5hbCc7XG5pbXBvcnQge1xuICBUcmFpdEFjdGlvbnNGYWN0b3J5Q29uZmlnLFxuICBUcmFpdEluaXRpYWxTdGF0ZUZhY3RvcnlDb25maWcsXG4gIFRyYWl0U2VsZWN0b3JzRmFjdG9yeUNvbmZpZyxcbn0gZnJvbSAnbmdyeC10cmFpdHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUGFnaW5hdGlvbjxFbnRpdHk+KHtcbiAgY2FjaGVUeXBlID0gJ2Z1bGwnLFxuICBwYWdlU2l6ZSA9IDIwLFxuICBjdXJyZW50UGFnZSA9IDAsXG4gIHBhZ2VzVG9DYWNoZSA9IDMsXG59OiBQYWdpbmF0aW9uQ29uZmlnID0ge30pIHtcbiAgcmV0dXJuIGNyZWF0ZVRyYWl0RmFjdG9yeSh7XG4gICAga2V5OiBwYWdpbmF0aW9uVHJhaXRLZXksXG4gICAgZGVwZW5kczogW2xvYWRFbnRpdGllc1RyYWl0S2V5XSxcbiAgICBjb25maWc6IHtcbiAgICAgIGNhY2hlVHlwZSxcbiAgICAgIHBhZ2VTaXplLFxuICAgICAgY3VycmVudFBhZ2UsXG4gICAgICBwYWdlc1RvQ2FjaGUsXG4gICAgfSBhcyBQYWdpbmF0aW9uQ29uZmlnLFxuICAgIGFjdGlvbnM6ICh7IGFjdGlvbnNHcm91cEtleSB9OiBUcmFpdEFjdGlvbnNGYWN0b3J5Q29uZmlnKSA9PlxuICAgICAgY3JlYXRlUGFnaW5hdGlvblRyYWl0QWN0aW9ucyhhY3Rpb25zR3JvdXBLZXkpLFxuICAgIHNlbGVjdG9yczogKHtcbiAgICAgIHByZXZpb3VzU2VsZWN0b3JzLFxuICAgICAgYWxsQ29uZmlncyxcbiAgICB9OiBUcmFpdFNlbGVjdG9yc0ZhY3RvcnlDb25maWcpID0+XG4gICAgICBjcmVhdGVQYWdpbmF0aW9uVHJhaXRTZWxlY3RvcnM8RW50aXR5PihcbiAgICAgICAgcHJldmlvdXNTZWxlY3RvcnMgYXMgTG9hZEVudGl0aWVzU2VsZWN0b3JzPEVudGl0eT4sXG4gICAgICAgIGFsbENvbmZpZ3MgYXMgUGFnaW5hdGlvbktleWVkQ29uZmlnICZcbiAgICAgICAgICBGaWx0ZXJLZXllZENvbmZpZzxFbnRpdHksIHVua25vd24+LFxuICAgICAgKSxcbiAgICBtdXRhdG9yczogKHsgYWxsU2VsZWN0b3JzLCBhbGxDb25maWdzIH0pID0+XG4gICAgICBjcmVhdGVQYWdpbmF0aW9uVHJhaXRNdXRhdG9yczxFbnRpdHk+KFxuICAgICAgICBhbGxTZWxlY3RvcnMgYXMgUGFnaW5hdGlvblNlbGVjdG9yczxFbnRpdHk+ICZcbiAgICAgICAgICBMb2FkRW50aXRpZXNTZWxlY3RvcnM8RW50aXR5PixcbiAgICAgICAgYWxsQ29uZmlncyBhcyBQYWdpbmF0aW9uS2V5ZWRDb25maWcgJiBMb2FkRW50aXRpZXNLZXllZENvbmZpZzxFbnRpdHk+LFxuICAgICAgKSxcbiAgICBpbml0aWFsU3RhdGU6ICh7XG4gICAgICBwcmV2aW91c0luaXRpYWxTdGF0ZSxcbiAgICAgIGFsbENvbmZpZ3MsXG4gICAgfTogVHJhaXRJbml0aWFsU3RhdGVGYWN0b3J5Q29uZmlnKSA9PlxuICAgICAgY3JlYXRlUGFnaW5hdGlvbkluaXRpYWxTdGF0ZTxFbnRpdHk+KFxuICAgICAgICBwcmV2aW91c0luaXRpYWxTdGF0ZSxcbiAgICAgICAgYWxsQ29uZmlncyBhcyBQYWdpbmF0aW9uS2V5ZWRDb25maWcsXG4gICAgICApLFxuICAgIHJlZHVjZXI6ICh7XG4gICAgICBpbml0aWFsU3RhdGUsXG4gICAgICBhbGxBY3Rpb25zLFxuICAgICAgYWxsU2VsZWN0b3JzLFxuICAgICAgYWxsTXV0YXRvcnMsXG4gICAgICBhbGxDb25maWdzLFxuICAgIH0pID0+XG4gICAgICBjcmVhdGVQYWdpbmF0aW9uVHJhaXRSZWR1Y2VyKFxuICAgICAgICBpbml0aWFsU3RhdGUsXG4gICAgICAgIGFsbEFjdGlvbnMgYXMgxp9QYWdpbmF0aW9uQWN0aW9ucyAmXG4gICAgICAgICAgRmlsdGVyQWN0aW9uczxFbnRpdHk+ICZcbiAgICAgICAgICBMb2FkRW50aXRpZXNBY3Rpb25zPEVudGl0eT4gJlxuICAgICAgICAgIENydWRBY3Rpb25zPEVudGl0eT4sXG4gICAgICAgIGFsbFNlbGVjdG9ycyBhcyBQYWdpbmF0aW9uU2VsZWN0b3JzPEVudGl0eT4gJlxuICAgICAgICAgIExvYWRFbnRpdGllc1NlbGVjdG9yczxFbnRpdHk+LFxuICAgICAgICBhbGxNdXRhdG9ycyBhcyBQYWdpbmF0aW9uTXV0YXRvcnM8RW50aXR5PiAmXG4gICAgICAgICAgTG9hZEVudGl0aWVzTXV0YXRvcnM8RW50aXR5PixcbiAgICAgICAgYWxsQ29uZmlncyBhcyBGaWx0ZXJLZXllZENvbmZpZzxFbnRpdHksIHVua25vd24+ICZcbiAgICAgICAgICBMb2FkRW50aXRpZXNLZXllZENvbmZpZzxFbnRpdHk+ICZcbiAgICAgICAgICBQYWdpbmF0aW9uS2V5ZWRDb25maWcsXG4gICAgICApLFxuICAgIGVmZmVjdHM6ICh7IGFsbEFjdGlvbnMsIGFsbFNlbGVjdG9ycyB9KSA9PlxuICAgICAgY3JlYXRlUGFnaW5hdGlvblRyYWl0RWZmZWN0cyhcbiAgICAgICAgYWxsQWN0aW9ucyBhcyDGn1BhZ2luYXRpb25BY3Rpb25zICZcbiAgICAgICAgICBGaWx0ZXJBY3Rpb25zPEVudGl0eT4gJlxuICAgICAgICAgIExvYWRFbnRpdGllc0FjdGlvbnM8RW50aXR5PiAmXG4gICAgICAgICAgQ3J1ZEFjdGlvbnM8RW50aXR5PixcbiAgICAgICAgYWxsU2VsZWN0b3JzIGFzIFBhZ2luYXRpb25TZWxlY3RvcnM8RW50aXR5PiAmXG4gICAgICAgICAgTG9hZEVudGl0aWVzU2VsZWN0b3JzPEVudGl0eT4sXG4gICAgICApLFxuICB9KTtcbn1cbiJdfQ==
