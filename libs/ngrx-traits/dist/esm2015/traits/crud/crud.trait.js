import { createTraitFactory } from 'ngrx-traits';
import { createCrudTraitActions } from '../crud/crud.trait.actions';
import { createCrudTraitSelectors } from '../crud/crud.trait.selectors';
import {
  createCrudInitialState,
  createCrudTraitReducer,
} from '../crud/crud.trait.reducer';
import { crudTraitKey } from './crud.model';
import { loadEntitiesTraitKey } from '../load-entities/load-entities.model';
import { createCrudTraitMutators } from './crud.trait.mutators';
export function addCrudEntities({ storeChanges = false } = {}) {
  return createTraitFactory({
    key: crudTraitKey,
    depends: [loadEntitiesTraitKey],
    config: { storeChanges },
    actions: ({ actionsGroupKey }) => createCrudTraitActions(actionsGroupKey),
    selectors: ({ previousSelectors }) =>
      createCrudTraitSelectors(previousSelectors),
    mutators: ({ allConfigs }) => createCrudTraitMutators(allConfigs),
    initialState: ({ previousInitialState }) =>
      createCrudInitialState(previousInitialState),
    reducer: ({ initialState, allActions, allMutators, allConfigs }) =>
      createCrudTraitReducer(initialState, allActions, allMutators, allConfigs),
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J1ZC50cmFpdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RyYWl0cy9zcmMvY3J1ZC9jcnVkLnRyYWl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxrQkFBa0IsR0FLbkIsTUFBTSxhQUFhLENBQUM7QUFDckIsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUNMLHNCQUFzQixFQUN0QixzQkFBc0IsR0FDdkIsTUFBTSw0QkFBNEIsQ0FBQztBQUVwQyxPQUFPLEVBSUwsWUFBWSxHQUNiLE1BQU0sY0FBYyxDQUFDO0FBRXRCLE9BQU8sRUFJTCxvQkFBb0IsR0FDckIsTUFBTSxzQ0FBc0MsQ0FBQztBQUs5QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVoRSxNQUFNLFVBQVUsZUFBZSxDQUFTLEVBQ3RDLFlBQVksR0FBRyxLQUFLLE1BQ04sRUFBRTtJQUNoQixPQUFPLGtCQUFrQixDQUFDO1FBQ3hCLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFFLFlBQVksRUFBZ0I7UUFDdEMsT0FBTyxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQTZCLEVBQUUsRUFBRSxDQUMxRCxzQkFBc0IsQ0FBUyxlQUFlLENBQUM7UUFDakQsU0FBUyxFQUFFLENBQUMsRUFBRSxpQkFBaUIsRUFBK0IsRUFBRSxFQUFFLENBQ2hFLHdCQUF3QixDQUN0QixpQkFBa0QsQ0FDbkQ7UUFDSCxRQUFRLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBbUMsRUFBRSxFQUFFLENBQzVELHVCQUF1QixDQUNyQixVQUErRCxDQUNoRTtRQUNILFlBQVksRUFBRSxDQUFDLEVBQUUsb0JBQW9CLEVBQWtDLEVBQUUsRUFBRSxDQUN6RSxzQkFBc0IsQ0FBUyxvQkFBb0IsQ0FBQztRQUN0RCxPQUFPLEVBQUUsQ0FBQyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FDakUsc0JBQXNCLENBQ3BCLFlBQVksRUFDWixVQUltQixFQUNuQixXQUFXLEVBQ1gsVUFJdUIsQ0FDeEI7S0FDSixDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY3JlYXRlVHJhaXRGYWN0b3J5LFxuICBUcmFpdEFjdGlvbnNGYWN0b3J5Q29uZmlnLFxuICBUcmFpdEluaXRpYWxTdGF0ZUZhY3RvcnlDb25maWcsXG4gIFRyYWl0U2VsZWN0b3JzRmFjdG9yeUNvbmZpZyxcbiAgVHJhaXRTdGF0ZU11dGF0b3JzRmFjdG9yeUNvbmZpZyxcbn0gZnJvbSAnbmdyeC10cmFpdHMnO1xuaW1wb3J0IHsgY3JlYXRlQ3J1ZFRyYWl0QWN0aW9ucyB9IGZyb20gJy4uL2NydWQvY3J1ZC50cmFpdC5hY3Rpb25zJztcbmltcG9ydCB7IGNyZWF0ZUNydWRUcmFpdFNlbGVjdG9ycyB9IGZyb20gJy4uL2NydWQvY3J1ZC50cmFpdC5zZWxlY3RvcnMnO1xuaW1wb3J0IHtcbiAgY3JlYXRlQ3J1ZEluaXRpYWxTdGF0ZSxcbiAgY3JlYXRlQ3J1ZFRyYWl0UmVkdWNlcixcbn0gZnJvbSAnLi4vY3J1ZC9jcnVkLnRyYWl0LnJlZHVjZXInO1xuaW1wb3J0IHsgU29ydEFjdGlvbnMsIFNvcnRLZXllZENvbmZpZyB9IGZyb20gJy4uL3NvcnQvc29ydC5tb2RlbCc7XG5pbXBvcnQge1xuICBDcnVkQWN0aW9ucyxcbiAgQ3J1ZENvbmZpZyxcbiAgQ3J1ZEtleWVkQ29uZmlnLFxuICBjcnVkVHJhaXRLZXksXG59IGZyb20gJy4vY3J1ZC5tb2RlbCc7XG5pbXBvcnQgeyBGaWx0ZXJBY3Rpb25zLCBGaWx0ZXJLZXllZENvbmZpZyB9IGZyb20gJy4uL2ZpbHRlci9maWx0ZXIubW9kZWwnO1xuaW1wb3J0IHtcbiAgTG9hZEVudGl0aWVzQWN0aW9ucyxcbiAgTG9hZEVudGl0aWVzS2V5ZWRDb25maWcsXG4gIExvYWRFbnRpdGllc1NlbGVjdG9ycyxcbiAgbG9hZEVudGl0aWVzVHJhaXRLZXksXG59IGZyb20gJy4uL2xvYWQtZW50aXRpZXMvbG9hZC1lbnRpdGllcy5tb2RlbCc7XG5pbXBvcnQge1xuICBQYWdpbmF0aW9uQWN0aW9ucyxcbiAgUGFnaW5hdGlvbktleWVkQ29uZmlnLFxufSBmcm9tICcuLi9wYWdpbmF0aW9uL3BhZ2luYXRpb24ubW9kZWwnO1xuaW1wb3J0IHsgY3JlYXRlQ3J1ZFRyYWl0TXV0YXRvcnMgfSBmcm9tICcuL2NydWQudHJhaXQubXV0YXRvcnMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkQ3J1ZEVudGl0aWVzPEVudGl0eT4oe1xuICBzdG9yZUNoYW5nZXMgPSBmYWxzZSxcbn06IENydWRDb25maWcgPSB7fSkge1xuICByZXR1cm4gY3JlYXRlVHJhaXRGYWN0b3J5KHtcbiAgICBrZXk6IGNydWRUcmFpdEtleSxcbiAgICBkZXBlbmRzOiBbbG9hZEVudGl0aWVzVHJhaXRLZXldLFxuICAgIGNvbmZpZzogeyBzdG9yZUNoYW5nZXMgfSBhcyBDcnVkQ29uZmlnLFxuICAgIGFjdGlvbnM6ICh7IGFjdGlvbnNHcm91cEtleSB9OiBUcmFpdEFjdGlvbnNGYWN0b3J5Q29uZmlnKSA9PlxuICAgICAgY3JlYXRlQ3J1ZFRyYWl0QWN0aW9uczxFbnRpdHk+KGFjdGlvbnNHcm91cEtleSksXG4gICAgc2VsZWN0b3JzOiAoeyBwcmV2aW91c1NlbGVjdG9ycyB9OiBUcmFpdFNlbGVjdG9yc0ZhY3RvcnlDb25maWcpID0+XG4gICAgICBjcmVhdGVDcnVkVHJhaXRTZWxlY3RvcnM8RW50aXR5PihcbiAgICAgICAgcHJldmlvdXNTZWxlY3RvcnMgYXMgTG9hZEVudGl0aWVzU2VsZWN0b3JzPEVudGl0eT4sXG4gICAgICApLFxuICAgIG11dGF0b3JzOiAoeyBhbGxDb25maWdzIH06IFRyYWl0U3RhdGVNdXRhdG9yc0ZhY3RvcnlDb25maWcpID0+XG4gICAgICBjcmVhdGVDcnVkVHJhaXRNdXRhdG9yczxFbnRpdHk+KFxuICAgICAgICBhbGxDb25maWdzIGFzIENydWRLZXllZENvbmZpZyAmIExvYWRFbnRpdGllc0tleWVkQ29uZmlnPEVudGl0eT4sXG4gICAgICApLFxuICAgIGluaXRpYWxTdGF0ZTogKHsgcHJldmlvdXNJbml0aWFsU3RhdGUgfTogVHJhaXRJbml0aWFsU3RhdGVGYWN0b3J5Q29uZmlnKSA9PlxuICAgICAgY3JlYXRlQ3J1ZEluaXRpYWxTdGF0ZTxFbnRpdHk+KHByZXZpb3VzSW5pdGlhbFN0YXRlKSxcbiAgICByZWR1Y2VyOiAoeyBpbml0aWFsU3RhdGUsIGFsbEFjdGlvbnMsIGFsbE11dGF0b3JzLCBhbGxDb25maWdzIH0pID0+XG4gICAgICBjcmVhdGVDcnVkVHJhaXRSZWR1Y2VyKFxuICAgICAgICBpbml0aWFsU3RhdGUsXG4gICAgICAgIGFsbEFjdGlvbnMgYXMgQ3J1ZEFjdGlvbnM8RW50aXR5PiAmXG4gICAgICAgICAgTG9hZEVudGl0aWVzQWN0aW9uczxFbnRpdHk+ICZcbiAgICAgICAgICBTb3J0QWN0aW9uczxFbnRpdHk+ICZcbiAgICAgICAgICBGaWx0ZXJBY3Rpb25zPGFueT4gJlxuICAgICAgICAgIFBhZ2luYXRpb25BY3Rpb25zLFxuICAgICAgICBhbGxNdXRhdG9ycyxcbiAgICAgICAgYWxsQ29uZmlncyBhcyBDcnVkS2V5ZWRDb25maWcgJlxuICAgICAgICAgIEZpbHRlcktleWVkQ29uZmlnPEVudGl0eSwgdW5rbm93bj4gJlxuICAgICAgICAgIExvYWRFbnRpdGllc0tleWVkQ29uZmlnPEVudGl0eT4gJlxuICAgICAgICAgIFNvcnRLZXllZENvbmZpZzxFbnRpdHk+ICZcbiAgICAgICAgICBQYWdpbmF0aW9uS2V5ZWRDb25maWcsXG4gICAgICApLFxuICB9KTtcbn1cbiJdfQ==
